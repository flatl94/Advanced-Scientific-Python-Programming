import numpy as np
from scipy import linalg as lg
print('Exercise a, b, c: create a matrix, a vector and solve for x')
mat_a = np.array([[1, -2, 3],
                  [4, 5, 6],
                  [7, 1, 9]])
vect_b = np.array([1,2,3])
vect_x = lg.solve(mat_a,vect_b)
print(vect_x)
print('Exercise d: check a b and c')
print(vect_b == mat_a @ vect_x)
print('Exercise e: repeating a->d with random 3x3 matrix')
mat_b = np.random.random(size=9).reshape((3,3))
print(mat_b)
mat_x = lg.solve(mat_a, mat_b)
print(mat_x)
print(mat_b-mat_a @ mat_x <0.0001)
print('Exercise f: problem a with eigenvalue')
eig_val, eig_vec = lg.eig(mat_a)
print(eig_val,'\n',eig_vec)
print('Exercise g: inverse and determinant of mat_a')
inv_a, det_a  = lg.inv(mat_a), lg.det(mat_a)
print(inv_a, '\n', det_a)
print('Exercise h: different norms of mat_a')
norm_nuc = lg.norm(mat_a, ord='nuc')
norm_frob = lg.norm(mat_a)
norm_first = lg.norm(mat_a, ord=1)
norm_inf = lg.norm(mat_a, ord=np.inf)
print(norm_nuc)
print(norm_frob)
print(norm_first)
print(norm_inf)